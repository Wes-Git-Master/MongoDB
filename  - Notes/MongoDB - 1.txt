 ===================================   find   ========================================

 - db.users | .find({}) | - відображення інформації з колекції
 - db.users | .find({name:'Alex'}) | - пошук обєкта по ключу та значенню
 - db.users | .insertOne({car:'BMW', model:'s3', year:2005}) | - додавання обєкту
 - db.users | .find({_id:ObjectId('661d5a39e26eea6939c8d959')}) | - пошук по id
 - db.users | .find({gender:'female', rating:2}) | - пошук по іншим полям окрім id

 -------------------------------------------------------------------------------------

 db.users.find(
        {gender:'female', rating:2},
        {_id:false}                       - виключення id з обєкта при пошуку обєкта
        {_id:true}                        - тільки id
        {_id:true, name:1, gender:1}      - id з вказаними полями
 )

 -------------------------------------------------------------------------------------

 db.users.find({
        $and:[
            {age:12},
            {gender:'male'}
        ]
 })

                                        - $and[] - оператор пошуку за ключами

 -------------------------------------------------------------------------------------

 db.users.find({                        - $or[] - оператор пошуку за ключами (або/або)
      $or:[
          {age:12},
          {rating:2}
      ]
 })

 -------------------------------------------------------------------------------------

 - db.users.find({age:{$in:[12,55,35,25,11,18]}})  |
 - db.users.find({age:{$nin:[12,55,35,25,11,18]}}) |

                                              - пошук з вкладеністю

 -------------------------------------------------------------------------------------

 db.users.find({                              - $not:{$in:[]} - пощук з вкладеністю
     age:{
         $not:{
             $in:[12,55,35,25,11,18]
         }
     }
 })

 -------------------------------------------------------------------------------------

 - db.users | .find({rating:{$gt:2}})             - $gt - більше ніж
 - db.users | .find({rating:{$lt:3}})             - $lt - менше ніж
 - db.users | .find({rating:{$gte:3}})            - $gte - більше або дорівнює
 - db.users | .find({rating:{$lte:3}})            - $lte - меньше або дорівнює
 - db.users | .find({rating:{$ne:3}})             - $ne - не дорівнює
 - db.users | .find({rating:{$eq:3}})             - $eq - дорівнює

 -------------------------------------------------------------------------------------

 - db.users.find({name:'Kira'})                   - по name

 - db.users.find({name:/v/i})        -  /v/i      - пошук обєкта, по букві в name

 - db.users.find({name:/^a/i})       -  /^a/i     - name якого починається на букву "а"

 - db.users.find({name:/a$/i})       -  /a$/i     - name якого закінчується на букву "а"

 - db.users.find({name:/.{2}t/i})    -  /.{2}t/i  -

 - db.users.find({name:/^k.*a$/i})   -  /^k.*a$/i - name якого починається на букву "k",
                                                    та закінчується на букву "a"

  -------------------------------------------------------------------------------------

  - db.users.find({'address.city':'Lviv'})         -  пошук в обєктах

  - db.users.find({studying:'js'})                 -  пошук в масиві

  - db.users.find({rating:{$exists:0}})            -  пошук обєктів,
  - db.users.find({rating:null})                      в яких
  - db.users.find({parents:{$exists:0}})              відсутнє поле

 --------------------------------------------------------------------------------------

 - db.users |.find({studying:{$size:2}})           - $size: - кількість елементів

 ====================================   sort   ========================================

 - db.users.find().sort({rating:1}) |              -  сортування
                                                       від меншого до більшого
 - db.users.find().sort({rating:-1}) |             -  сортування
                                                       від більшого до меншого
 - db.users.find().sort({rating:-1, age:-1}) |     -  сортування
                                                       по декількох полях

 ===================================   update   =======================================

 db.users.updateOne(
     {_id:ObjectId('661d5a39e26eea6939c8d958')},   -  пошуковий обєкт
     {$set:{rating:null}}                          -  $set:{} - метод set
 )

 db.users.updateOne(
     {_id:ObjectId('661d5a39e26eea6939c8d958')},   -  пошуковий обєкт
     {$unset:{rating:55}}                          -  $unset:{} - метод unset,
                                                                  видалити поле
 )

 db.users.updateMany(
     {gender:'male'},                              -  пошукові обєкти
     {$set:{gender:'animal'}}                      -  $set:{} - метод set
 )

 db.users.updateMany(                              -  апдейт всіх обєктів
     {parents:{$exists:1}},
     {$set:{'parents.$[]':'Karina'}}
 )

 db.users.updateOne(                               -  push
     {_id:ObjectId('661d5a39e26eea6939c8d952')},
     {$push:{studying:'python'}}
 )

 db.users.insertMany([                             - додавання масиву обєктів
     {asd:12, age:55},
     {eee:12, age:55},
     {auuusd:12, age:55},
 ])

 ===================================   delete   =======================================

 - db.users.deleteOne({_id:ObjectId('661d6491e26eea6939c8d960')})   -  видалення по id
 - db.users.deleteOne({_id:ObjectId('661d6491e26eea6939c8d95f')})
 - db.users.deleteOne({_id:ObjectId('661d5bdbe26eea6939c8d95d')})

 =================================   pagination   ====================================

 - db.users.find().sort({rating:-1, age:-1}).limit(2)               -  лімітування
 - db.users.find().sort({rating:-1, age:-1}).limit(2).skip(4)       -  пропустити































